.\" Automatically generated by Pod::Man 2.27 (Pod::Simple 3.28)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "EXTCAP 4"
.TH EXTCAP 4 "2018-02-23" "2.4.5" "The Wireshark Network Analyzer"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
extcap \- The extcap interface
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
The extcap interface is a versatile plugin interface that allows external binaries
to act as capture interfaces directly in wireshark. It is used in scenarios, where
the source of the capture is not a traditional capture model
(live capture from an interface, from a pipe, from a file, etc). The typical
example is connecting esoteric hardware of some kind to the main wireshark app.
.PP
Without extcap, a capture can always be achieved by directly writing to a capture file:
.PP
.Vb 2
\&    the\-esoteric\-binary \-\-the\-strange\-flag \-\-interface=stream1 \-\-file dumpfile.pcap &
\&    wireshark dumpfile.pcap
.Ve
.PP
but the extcap interface allows for such a connection to be easily established and
configured using the wireshark \s-1GUI.\s0
.PP
The extcap subsystem is made of multiple extcap binaries that are automatically
called by the \s-1GUI\s0 in a row. In the following chapters we will refer to them as
\&\*(L"the extcaps\*(R".
.PP
Extcaps may be any binary or script within the extcap directory. Please note, that scripts
need to be executable without prefacing a script interpreter before the call. To go deeper
into the extcap utility development, please refer to \s-1README\s0.extcap.
.PP
\&\s-1WINDOWS USER:\s0 Because of restrictions directly calling the script may not always work.
In such a case, a batch file may be provided, which then in turn executes the script. Please
refer to doc/extcap_example.py for more information.
.SH "GRAMMAR ELEMENTS"
.IX Header "GRAMMAR ELEMENTS"
Grammar elements:
.IP "arg (options)" 4
.IX Item "arg (options)"
argument for \s-1CLI\s0 calling
.IP "number" 4
.IX Item "number"
Reference # of argument for other values, display order
.IP "call" 4
.IX Item "call"
Literal argument to call (\-\-call=...)
.IP "display" 4
.IX Item "display"
Displayed name
.IP "default" 4
.IX Item "default"
Default value, in proper form for type
.IP "range" 4
.IX Item "range"
Range of valid values for \s-1UI\s0 checking (min,max) in proper form
.IP "type" 4
.IX Item "type"
Argument type for \s-1UI\s0 filtering for raw, or \s-1UI\s0 type for selector:
.Sp
.Vb 11
\&    integer
\&    unsigned
\&    long (may include scientific / special notation)
\&    float
\&    selector (display selector table, all values as strings)
\&    boolean (display checkbox)
\&    radio (display group of radio buttons with provided values, all values as strings)
\&    fileselect (display a dialog to select a file from the filesystem, value as string)
\&    multicheck (display a textbox for selecting multiple options, values as strings)
\&    password (display a textbox with masked text)
\&    timestamp (display a calendar)
.Ve
.IP "value (options)" 4
.IX Item "value (options)"
.Vb 2
\&    Values for argument selection
\&    arg     Argument # this value applies to
.Ve
.SH "EXAMPLES"
.IX Header "EXAMPLES"
Example 1:
.PP
.Vb 8
\&    arg {number=0}{call=\-\-channel}{display=Wi\-Fi Channel}{type=integer}{required=true}
\&    arg {number=1}{call=\-\-chanflags}{display=Channel Flags}{type=radio}
\&    arg {number=2}{call=\-\-interface}{display=Interface}{type=selector}
\&    value {arg=0}{range=1,11}
\&    value {arg=1}{value=ht40p}{display=HT40+}
\&    value {arg=1}{value=ht40m}{display=HT40\-}
\&    value {arg=1}{value=ht20}{display=HT20}
\&    value {arg=2}{value=wlan0}{display=wlan0}
.Ve
.PP
Example 2:
.PP
.Vb 3
\&    arg {number=0}{call=\-\-usbdevice}{USB Device}{type=selector}
\&    value {arg=0}{call=/dev/sysfs/usb/foo/123}{display=Ubertooth One sn 1234}
\&    value {arg=0}{call=/dev/sysfs/usb/foo/456}{display=Ubertooth One sn 8901}
.Ve
.PP
Example 3:
.PP
.Vb 3
\&    arg {number=0}{call=\-\-usbdevice}{USB Device}{type=selector}
\&    arg {number=1}{call=\-\-server}{display=IP address for log server}{type=string}{validation=(?:\ed{1,3}\e.){3}\ed{1,3}}
\&    flag {failure=Permission denied opening Ubertooth device}
.Ve
.PP
Example 4:
    arg {number=0}{call=\-\-username}{display=Username}{type=string}
    arg {number=1}{call=\-\-password}{display=Password}{type=password}
.PP
Example 5:
    arg {number=0}{call=\-\-start}{display=Start Time}{type=timestamp}
    arg {number=1}{call=\-\-end}{display=End Time}{type=timestamp}
.SH "Security awareness"
.IX Header "Security awareness"
.IP "\- Users running wireshark as root, we can't save you" 4
.IX Item "- Users running wireshark as root, we can't save you"
.PD 0
.IP "\- Dumpcap retains suid/setgid and group+x permissions to allow users in wireshark group only" 4
.IX Item "- Dumpcap retains suid/setgid and group+x permissions to allow users in wireshark group only"
.IP "\- Third-party capture programs run w/ whatever privs they're installed with" 4
.IX Item "- Third-party capture programs run w/ whatever privs they're installed with"
.IP "\- If an attacker can write to a system binary directory, we're game over anyhow" 4
.IX Item "- If an attacker can write to a system binary directory, we're game over anyhow"
.IP "\- Reference the folders tab in the wireshark\->about information, to see from which directory extcap is being run" 4
.IX Item "- Reference the folders tab in the wireshark->about information, to see from which directory extcap is being run"
.PD
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fIwireshark\fR\|(1), \fItshark\fR\|(1), \fIdumpcap\fR\|(1), \fIandroiddump\fR\|(1), \fIsshdump\fR\|(1), \fIrandpktdump\fR\|(1)
.SH "NOTES"
.IX Header "NOTES"
\&\fBExtcap\fR is feature of \fBWireshark\fR.  The latest version
of \fBWireshark\fR can be found at <https://www.wireshark.org>.
.PP
\&\s-1HTML\s0 versions of the Wireshark project man pages are available at:
<https://www.wireshark.org/docs/man\-pages>.
